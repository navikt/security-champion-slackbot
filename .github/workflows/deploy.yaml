name: Deploy job
on:
  push:
    branches:
      - main
  workflow_run:
    workflows: [ 'Merge Dependabot PRs' ]
    types: [ completed ]
env:
  IMAGE_BASE: ghcr.io/${{github.repository}}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # ratchet:step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.osv.dev:443 
            api.securityscorecards.dev:443 
            bestpractices.coreinfrastructure.org:443 
            fulcio.sigstore.dev:443 
            github.com:443 
            api.github.com:443 
            rekor.sigstore.dev:443 
            sigstore-tuf-root.storage.googleapis.com:443 
            www.bestpractices.dev:443
            registry.npmjs.org:443
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # ratchet:actions/checkout@v3
      - uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # ratchet:actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # ratchet:actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # ratchet:actions/checkout@v3
        name: Checkout
      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV
      - name: Build app and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --pull --tag ${IMAGE} .
          docker push ${IMAGE}
  deploy-dev:
    name: Deploy til dev
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # ratchet:actions/checkout@v3
        name: Checkout
      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV
      - name: Deploy
        uses: nais/deploy/actions/deploy@c73efa8384743a5c14b94d4a4b9c1cf5a260b532 # ratchet:nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-gcp.yaml
  deploy-prod:
    name: Deploy til prod
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # ratchet:actions/checkout@v3
        name: Checkout
      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV
      - name: Deploy
        uses: nais/deploy/actions/deploy@c73efa8384743a5c14b94d4a4b9c1cf5a260b532 # ratchet:nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/prod-gcp.yaml,.nais/alerts.yaml
  release:
    if: github.ref == 'refs/heads/main'
    name: Tag and release
    needs: deploy-prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # ratchet:actions/checkout@v3
        name: Checkout
      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # ratchet:ncipollo/release-action@v1
        name: Create release
        with:
          tag: release/prod@${{ env.TAG }}
          generateReleaseNotes: true
